#!/usr/bin/python
# -*- coding: utf-8 -*-
#私	ワタシ	私	名詞-代名詞-一般
import codecs
import re

# dict = {}
#
# for line in codecs.open("okashira.txt.chasen","r","euc-jp"):
#     line = line.rstrip('\r\n')
#     if line == "EOS":
#         pass
#     else:
#         lis = line.split("\t")
#         if re.search(ur"名詞",lis[3]):
#             if lis[0] in dict:
#                 dict[lis[0]] += 1
#             else:
#                 dict[lis[0]] = 1
#
# for x in sorted(dict.items(),key=lambda x:x[1], reverse=True):
#     print x[0], x[1]

# re_words = [
#     'かな[？\?]',
#     'でしょ',
#     'ゾ$',
#     '鑑',
#     '\(屑\|クズ\)',
#     'だよな[あぁ]',
#     '多少はね[？?]\?'
    # '\(ゾ\|よ\?ね\|え[えぇ]\)[\.・…]\+'
    # '、\?どうぞ$'
    # '.\+[好す][きこ]$'
    # '^は[？?]'
    # '[（(][一-龠ぁ-んァ-ヶ]*[）)]\?$'
    # '^かわいい$'
    # '^くさそう$'
    # '草$'
    # '草\([生は]える\|不可避\)'
    # '大草原'
    # 'たまげたな[あぁ]'
    # '.\{3,\}[\.・…]\+[！!]\?[？?]'
    # '、\(起訴\|訴訟\)'
    # '[過す]ぎる'
    # '[0-9０-９]\+点$'
    # '一番[言い]われてい\?るから'
    # '[そこ]れ\?マジ\?[？?]'
    # '\(申\|もう\)し\(訳\|わけ\)ないが、\?.\+は[ＮN][ＧG]'
    # '\(やった\|成し遂げた\)ぜ。\?'
    # '^ん[？?]'
    # '立　\?教　\?大　\?学'
    # '[\^＾][~〜]'
    # 'ロッテ[！!]'
    # 'なんか.\+的'
    # 'ありがと\(ナス\|:eggplant:\)'
    # 'だろ[！!][\s　]\?いい加減にしろ[！!]'
    # 'いいゾ\^\?[〜~]'
    # 'やめろ$'
    # 'きらい$'
    # '特有の'
    # '\(伊東\|伊藤\)ライフ'
    # '\([A-Z][！!]\)\{3\}'
    # '非常に.\+で、非常に.\+'
    # 'いっ\?つも.\+んな'
    # '\(何\|なん\|誰\|だれ\)だよ[、\s　]\?.\+か[？?]'
    # '.\+ゎ.\+だょ'
    # 'これが.+ちゃんですか'
    # '.\+ないやん[!！]'
    # '時代は.\+ゾ$'
    # 'の\(始\|はじ\)まりや'
    # 'この\(辺\|へん\)にぃ'
    # '最高やな[！!]'
    # '.\{2,\}いる[？?]$'
    # '\(.[↑↓]\)\{2\}'
# ]
inm_re_lists = []
for line in codecs.open("inm_re_lists.txt", "r", "utf-8"):
    inm_re_lists.append(line.rstrip().encode("utf-8"))

for line in inm_re_lists:
    print line.decode("utf-8")

# [
#     'かな[？?]',
#     'でしょ',
#     'ゾ$',
#     '鑑',
#     '\(屑\|クズ\)',
#     'だよな[あぁ]',
#     '多少はね[？?]\?',
#     '\(ゾ\|よ\?ね\|え[えぇ]\)[\.・…]\+',
#     '、\?どうぞ$',
#     '.\+[好す][きこ]$',
#     '^は[？?]',
#     '[（(][一-龠ぁ-んァ-ヶ]*[）)]\?$',
#     '^かわいい$',
#     '^くさそう$',
#     '草$',
#     '草\([生は]える\|不可避\)',
#     '大草原',
#     'たまげたな[あぁ]',
#     '.\{3,\}[\.・…]\+[！!]\?[？?]',
#     '、\(起訴\|訴訟\)',
#     '[過す]ぎる',
#     '[0-9０-９]\+点$',
#     '一番[言い]われてい\?るから',
#     '[そこ]れ\?マジ\?[？?]',
#     '\(申\|もう\)し\(訳\|わけ\)ないが、\?.\+は[ＮN][ＧG]',
#     '\(やった\|成し遂げた\)ぜ。\?',
#     '^ん[？?]',
#     '立　\?教　\?大　\?学',
#     '[\^＾][~〜]',
#     'ロッテ[！!]',
#     'なんか.\+的',
#     'ありがと\(ナス\|:eggplant:\)',
#     'だろ[！!][\s　]\?いい加減にしろ[！!]',
#     'いいゾ\^\?[〜~]',
#     'やめろ$',
#     'きらい$',
#     '特有の',
#     '\(伊東\|伊藤\)ライフ',
#     '\([A-Z][！!]\)\{3\}',
#     '非常に.\+で、非常に.\+',
#     'いっ\?つも.\+んな',
#     '\(何\|なん\|誰\|だれ\)だよ[、\s　]\?.\+か[？?]',
#     '.\+ゎ.\+だょ',
#     'これが.+ちゃんですか',
#     '.\+ないやん[!！]',
#     '時代は.\+ゾ$',
#     'の\(始\|はじ\)まりや',
#     'この\(辺\|へん\)にぃ',
#     '最高やな[！!]',
#     '.\{2,\}いる[？?]$',
#     '\(.[↑↓]\)\{2\}'
#     ]

syamu_re_lists = [
    'ｱｯｱｯｱｯｱｯ',
    'ｽｩｩｩ...',
    'なぜ来なかったんでしょうかね～？',
    '不思議ですね～',
    'おほ[^＾][~〜]',
    'ほほ[^＾][~〜]',
    'ｺｲﾆﾊｯﾃﾝｼﾃ',
    '素敵なことやないですかぁ',
    '十分ﾆﾁｨ!',
    'ｿｿｿｿ…',
    'DD\(Y\|D)DD',
    'どっこいどっこい\(やな\|ですね)、どっこいどっこい',
    'それは君らがそう思ってるだけやでぇ？',
    'ほならね',
    'ほな自私そ言',
    '改めて考えると凄いな、って思うなあ',
    'ありがとうございますやで\(ほんま\|ホンマ)',
    'ｼｪｲｸｼｪｲｸﾌﾞｷﾞｰﾅﾑｰﾌﾞｻﾊﾞﾃﾞｨ',
    '\(アジャース\|ｱｼﾞｬｰｽ)',
    '食べる俺も主人公なんで',
    '警告：０点',
    'ン゛ン゛ッ',
    'だと思います。かもしくは同じコーヒーゼリーか、どっちかです',
    '赤ちゃんのお肌を触ってるみたいです',
    '丘people！？',
    '細かいこと～気にしすぎですよね',
    'いやいやそれはさ、それはキミの甘えじゃないか？ということや',
    'あまりに虫がよすぎるんじゃねーの',
    'inじゃねーの',
    '営業の人は大変だね。営業のお仕事の人は大変だろうね～'
]

# re_words = '[(?:' + ')(?:'.join(re_words) + ')]'

# re_words = '(?:かな[？\?]|+でしょ|ゾ$|鑑|\(屑\|クズ\)|だよな[あぁ]|多少はね[？?]\?|\(ゾ\|よ\?ね\|え[えぇ]\)[\.・…]\+|、\?どうぞ$|.\+[好す][きこ]$|^は[？?])'

# print re_words

test_text = 'FF外から失礼するゾ～（謝罪） このツイート面白スギィ！！！！！自分、RTいいっすか？ 淫夢知ってそうだから淫夢のリストにぶち込んでやるぜー いきなりリプしてすみません！許してください！なんでもしますから！(なんでもするとは言ってない)'

# matchOB = re.search(re_words, test_text)
#
# if matchOB:
#     print matchOB.group()

# matchedList = re.findall(re_words,test_text)
# if matchedList:
#     print matchedList

inm_re = '(?:'+ "|".join(inm_re_lists) +')'
# print results

matchedList = re.findall(inm_re,test_text)
if matchedList:
    print len(matchedList)
